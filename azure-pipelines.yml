# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Sync
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'ResearchProjectContainerReg'
        repository: 'WebApiImage'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile.WebAPI'
    - task: Docker@2
      inputs:
        containerRegistry: 'ResearchProjectContainerReg'
        repository: 'ClientImage'
        command: 'buildAndPush'
        Dockerfile: 'Client/Dockerfile.Client'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - -'
          Write-Host ' reflect Azure Devops repo changes to GitHub repo'
          Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - - '
          $stageDir = '$(Build.SourcesDirectory)' | Split-Path
          $githubDir = $stageDir +"\"+"gitHub"
          $destination = $githubDir +"\"+"CodeChallengeCompanyWebAPI.git"
          #please provide your username
          $alias = 'RossMurphyIRL:'+ "$(Github.PAT)"
          #Please make sure, you remove https from azure-repo-clone-url
          $sourceURL = 'https://$(AzureDevOps.PAT)@rossbmurphy.visualstudio.com/CodeChallenge/_git/CodeChallengeCompanyWebAPI.git'
          #Please make sure, you remove https from github-repo-clone-url
          $destURL = 'https://' + $alias + '@github.com/RossMurphyIRL/CodeChallengeCompanyWebAPI.git'
          #Check if the parent directory exists and delete
          if((Test-Path -path $githubDir))
          {
            Remove-Item -Path $githubDir -Recurse -force
          }
          if(!(Test-Path -path $githubDir))
          {
            New-Item -ItemType directory -Path $githubDir
            Set-Location $githubDir
            git clone --mirror $sourceURL
          }
          else
          {
            Write-Host "The given folder path $githubDir already exists";
          }
          Set-Location $destination
          Write-Output '*****Git removing remote secondary****'
          git remote rm secondary
          Write-Output '*****Git remote add****'
          git remote add --mirror=fetch secondary $destURL
          Write-Output '*****Git fetch origin****'
          git fetch $sourceURL
          Write-Output '*****Git push secondary****'
          git push secondary --all
          Write-Output '**Azure Devops repo synced with Github repo**'
          Set-Location $stageDir
          if((Test-Path -path $githubDir))
          {
          Remove-Item -Path $githubDir -Recurse -force
          }
